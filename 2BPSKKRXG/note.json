{
  "paragraphs": [
    {
      "title": "Matrix Factorization",
      "text": "from pyspark.mllib.recommendation import ALS\n\nfrom pyspark.mllib.recommendation import ALS, Rating\nquery \u003d sqlContext.sql(\"select userId, videoId, score from user_scores\").cache()\n\nuserMap \u003d sc.broadcast(query.map(lambda x:x[0]).distinct().zipWithIndex().collectAsMap())\nvideoMap \u003d sc.broadcast(query.map(lambda x:x[1]).distinct().zipWithIndex().collectAsMap())\n\nscores \u003d query.map(lambda r: Rating(userMap.value.get(r[0]), videoMap.value.get(r[1]), float(r[2])))\nmodel \u003d ALS.trainImplicit(scores, 5)\nmodel.save(sc, \"/cbs/TrainedModel\")\n\nsqlContext.createDataFrame(zip(userMap.value.keys(), userMap.value.values()), [\"userId\", \"index\"]).write.saveAsTable(\"userMap\", mode\u003d\"overwrite\")\nsqlContext.createDataFrame(zip(videoMap.value.keys(), videoMap.value.values()), [\"videoId\", \"index\"]).write.saveAsTable(\"videoMap\", mode\u003d\"overwrite\")",
      "dateUpdated": "Jun 24, 2016 7:29:19 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala",
        "title": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1466776876791_1386157883",
      "id": "20160624-140116_1260656753",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "[Row(videoId\u003du\u0027676013123820\u0027, Title\u003du\"Ezekiel Elliott\u0027s fantasy impact on the Cowboys\"), Row(videoId\u003du\u0027693587523533\u0027, Title\u003du\u0027Dave Serrano retained as Tennessee baseball coach\u0027), Row(videoId\u003du\u0027610102851792\u0027, Title\u003du\u0027NBA lineups\u0027), Row(videoId\u003du\u0027711484995587\u0027, Title\u003du\u0027How will Jimmy Garoppolo perform in 2016\u0027), Row(videoId\u003du\u0027682764867845\u0027, Title\u003du\u0027James Franklin and Penn State trying to move forward\u0027), Row(videoId\u003du\u0027696395843914\u0027, Title\u003du\"We Need to Listen: Abiola Aborishade\u0027s perseverance\"), Row(videoId\u003du\u0027689772611589\u0027, Title\u003du\u0027Sevilla beats Liverpool in Europa League final\u0027), Row(videoId\u003du\u0027600457795684\u0027, Title\u003du\u0027Top Fantasy WRs in 2015\u0027), Row(videoId\u003du\u0027600457283983\u0027, Title\u003du\u0027Top Fantasy QBs in 2015\u0027), Row(videoId\u003du\u0027700152899645\u0027, Title\u003du\u0027NBA Draft: Tyler Ulis player breakdown\u0027)]\n"
      },
      "dateCreated": "Jun 24, 2016 2:01:16 PM",
      "dateStarted": "Jun 24, 2016 2:14:05 PM",
      "dateFinished": "Jun 24, 2016 2:14:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1466777578979_2098510866",
      "id": "20160624-141258_18108858",
      "dateCreated": "Jun 24, 2016 2:12:58 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "CBS Train and Test",
  "id": "2BPSKKRXG",
  "angularObjects": {
    "2BNTUCZY9": [],
    "2BR35CAAY": [],
    "2BRV7JKUH": [],
    "2BPY7DFTV": [],
    "2BN8E2KUT": [],
    "2BMZT71S3": [],
    "2BPZNUUGB": [],
    "2BQF1EWMT": [],
    "2BPVUY6QV": [],
    "2BP8VQQUP": [],
    "2BRMK1MMP": [],
    "2BN67BXG6": [],
    "2BP4228GP": [],
    "2BPAMJPFK": []
  },
  "config": {},
  "info": {}
}